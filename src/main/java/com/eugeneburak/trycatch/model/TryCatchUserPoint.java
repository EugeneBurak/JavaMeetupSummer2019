package com.eugeneburak.trycatch.model;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import java.util.Date;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
@DynamoDBTable(tableName = "trycatch_user_point")
public class TryCatchUserPoint {

  private static final long EPOCH_LIFETIME = 1209600;

  @DynamoDBHashKey @DynamoDBAutoGeneratedKey private String id;

  @DynamoDBAttribute(attributeName = "user_id")
  private String userId;

  @DynamoDBAttribute(attributeName = "trycatch_card_number")
  private String tryCatchCardNumber;

  @DynamoDBAttribute(attributeName = "order_id")
  private String orderId;

  @DynamoDBAttribute(attributeName = "order_created")
  private Date orderCreated;

  @DynamoDBAttribute(attributeName = "point_amount")
  private Integer pointAmount;

  @DynamoDBAttribute private boolean confirmed;

  @DynamoDBAttribute(attributeName = "record_removed_date")
  private long recordRemovedDate = generateLifetimeEpoch();

  public static TryCatchUserPointBuilder builder() {
    return new CustomTryCatchUserPointBuilder();
  }

  private static class CustomTryCatchUserPointBuilder extends TryCatchUserPointBuilder {

    @Override
    public TryCatchUserPoint build() {
      super.recordRemovedDate = generateLifetimeEpoch();
      return super.build();
    }
  }

  private static long generateLifetimeEpoch() {
    return (System.currentTimeMillis() / 1000L) + EPOCH_LIFETIME;
  }
}

package com.eugeneburak.trycatch.security;

import java.util.Collection;

import lombok.Builder;
import org.springframework.security.authentication.AbstractAuthenticationToken;
import org.springframework.security.core.GrantedAuthority;

public class ExternalAuthenticationToken extends AbstractAuthenticationToken {
  private final String principal;
  private String externalToken;

  /**
   * Creates an instance of AbstractAuthenticationToken.
   *
   * @param principal represents userId, typically it should be email
   * @param externalToken - token generated by Y6, typically takes from cookies
   * @param verified - boolean flag, if true authentication passed, false in other cases
   * @param authorities - authorities granted to user, typically should be null
   */
  @Builder
  public ExternalAuthenticationToken(String principal,
                                     String externalToken,
                                     Boolean verified,
                                     Collection<? extends GrantedAuthority> authorities) {
    super(authorities);
    this.principal = principal;
    this.externalToken = externalToken;
    super.setAuthenticated(Boolean.TRUE.equals(verified));
  }

  @Override
  public String getCredentials() {
    return "";
  }

  @Override
  public String getPrincipal() {
    return principal;
  }

  public String getExternalToken() {
    return externalToken;
  }
}